﻿server.port=8081
#项目contextPath,一般在配置版本中，不配置
server.servlet.context-path=/demo-api/
#数据库连接1
spring.datasource.type=com.alibaba.druid.pool.xa.DruidXADataSource
spring.datasource.druid.primary.name=DBprimary
spring.datasource.druid.primary.jdbcUrl=jdbc:oracle:thin:@10.5.18.125:1521:xxpttest
spring.datasource.druid.primary.username=TL_PT_DEMO
spring.datasource.druid.primary.password=TL_PT_DEMO
spring.datasource.druid.primary.driverClassName=oracle.jdbc.driver.OracleDriver

#数据库连接2
spring.datasource.druid.two.name=DBtwo
spring.datasource.druid.two.jdbcUrl=jdbc:oracle:thin:@172.29.0.29:1521:ORCL
spring.datasource.druid.two.username=TL_PT_SYSTEM
spring.datasource.druid.two.password=TL_PT_SYSTEM
spring.datasource.druid.two.driverClassName=oracle.jdbc.driver.OracleDriver

#sql运行时间打印
sqlcost.print=true
#是否采用热部署
spring.devtools.restart.enabled=false
spring.datasource.initialization-mode=always

spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=10
#配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
# 校验sql，oracle配置
#检验连接是否有效的查询语句。如果数据库Driver支持ping()方法，则优先使用ping()方法进行检查，否则使用validationQuery查询进行检查。(Oracle jdbc Driver目前不支持ping方法)
spring.datasource.druid.validationQuery=select 1 from dual
#设置从连接池获取连接时是否检查连接有效性，true时，如果连接空闲时间超过minEvictableIdleTimeMillis进行检查，否则不检查;false时，不检查
spring.datasource.druid.testWhileIdle=false
#设置从连接池获取连接时是否检查连接有效性，true时，每次都检查;false时，不检查
spring.datasource.druid.testOnBorrow=false
#设置往连接池归还连接时是否检查连接有效性，true时，每次都检查;false时，不检查
spring.datasource.druid.testOnReturn=false
#打开后，增强timeBetweenEvictionRunsMillis的周期性连接检查，minIdle内的空闲连接，每次检查强制验证连接有效性. 参考：https://github.com/alibaba/druid/wiki/KeepAlive_c
spring.datasource.druid.keepAlive=true
#连接泄露检查，打开removeAbandoned功能 , 连接从连接池借出后，长时间不归还，将触发强制回连接。回收周期随timeBetweenEvictionRunsMillis进行，如果连接为从连接池借出状态，并且未执行任何sql，并且从借出时间起已超过removeAbandonedTimeout时间，则强制归还连接到连接池中。
spring.datasource.druid.removeAbandoned=true
#超时时间，秒
spring.datasource.druid.removeAbandonedTimeout=1800
#关闭abanded连接时输出错误日志，这样出现连接泄露时可以通过错误日志定位忘记关闭连接的位置
spring.datasource.druid.logAbandoned=true
# 打开PSCache，并且指定每个连接上PSCache的大小，Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxOpenPreparedStatements=20
# 配置监控统计拦截的frilters,去掉后监控界面sql无法统计，‘wall’用于防火墙
#stat,wall,log4j去掉druid log4j日志
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢sql记录
spring.datasource.tomcat.connection-properties=druid.stat.mergeSql=true

mybatis.config-location=classpath:/mybatis-config.xml
mybatis.mapper-locations=classpath*:com/plan/**/*Mapper.xml

#jsp配置
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

#线程池配置
threadpool.core-pool-size=10
threadpool.max-pool-size=20
threadpool.queue-capacity=1000
threadpool.keep-alive-seconds=300

#错误信息长度
error.msg.length = 700
#token过期时长单位为分钟，（建议设置时长应小于单点登录失效时长，）
token_exp =60
#shiro不校验路径用“，”隔开
shiro.ignore.url=/login/unAuth,/login/checkAccount,/login/loginAccount,/login/logout,/sysLog/**

########################################redis配置开始#######################
spring.redis.host=10.50.1.123
spring.redis.port=6380
spring.redis.password=tl_redis_server
spring.redis.database=5
#jedis
spring.redis.jedis.pool.max-active=50
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.max-idle=100
spring.redis.jedis.pool.min-idle=0
spring.redis.timeout=0
spring.cache.type=redis
########################################redis配置结束#######################

#数据资源中心权限系统Api地址
service.permission.url=http://10.50.1.123:8090/auth/api

## JWT
# header:凭证(校验的变量名), expire:有效期1天(单位:s), secret:秘钥(普通字符串)
app.jwt.header=token
app.jwt.expire=5184000
app.jwt.secret=aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC91LzM2ODE4Njg=

#单点登录后跳转的前端地址，根据实际地址作调整
spring.menhuurl=http://127.0.0.1:9527/

spring.menhuurl2=http://127.0.0.1:6080/login

#不用登录即可直接访问的URL，多个URL用|隔开
cas.ignorePattern=/login/logout|/static/*|/login/getLoginUsername|/server/findtest|/login/getCasTicket|/api/*|company/login|/announcement/getInfoById|/image/*|/file/*

#ticket校验filter参数(外网有防火墙限制不能通过外网的地址进行ticket验证)
# 根据实际地址作调整10.50.1.123:8090
cas.casServerUrlPrefix=http://10.50.1.123:8090/cas-server

cas.casServerUrlPrefix2=http://10.50.1.123:8090/cas-server/login?service=http://127.0.0.1:8081/demo-api/login/checkAccount

cas.casServerLoginUrl=http://10.50.1.123:8090/cas-server/login
#登录验证
cas.serverName=http://127.0.0.1:8081/demo-api/login/checkAccount

cas.casPassUrl=/login/checkAccount,/login/shiroLogin,/login/getCasusername,/login/login2
cas.renew=false
cas.gateway=false
cas.useSession=true
cas.redirectAfterValidation =true
cas.exceptionOnValidationFailure =false

#默认登录时，跳回的URL统一为该URL
cas.serviceUrl=http://127.0.0.1:8081/demo-api/login/checkAccount
#静态资源过滤
cas.resource=/images/,/css/,/js/,/framemark/,/favicon.ico,/static/,/image/
#单点退出地址
cas.exitUrl=http://10.50.1.123:8090/cas-server/logout?service=http://127.0.0.1:8081/demo-api/login/logout

########################################单点登录配置结束###########################

########################################密码校验相关配置开始#######################
#公钥模量
rsa.publicModulus=00ebc6324c71566b28033d5ede7099817314654ed971cbb6e6f14ef0908d64940f6ee357aeb31665cdc3c91b8766e0d59665c7518cb03983167f3ac8f72d0d948568fb88fc865a0f1dad0e5fd7e62a9403f932ffa2360f106a51de237dfd932100d924dd82917c3da4dc698f071d2f4c353b3ae4495865cbbb087104bafb00158d
#公钥指数
rsa.publicExponent=010001
#公钥
rsa.publicKeyStr=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDrxjJMcVZrKAM9Xt5wmYFzFGVO2XHLtubxTvCQjWSUD27jV66zFmXNw8kbh2bg1ZZlx1GMsDmDFn86yPctDZSFaPuI/IZaDx2tDl/X5iqUA/ky/6I2DxBqUd4jff2TIQDZJN2CkXw9pNxpjwcdL0w1OzrkSVhly7sIcQS6+wAVjQIDAQAB
#私钥模量
rsa.privateModulus=00ebc6324c71566b28033d5ede7099817314654ed971cbb6e6f14ef0908d64940f6ee357aeb31665cdc3c91b8766e0d59665c7518cb03983167f3ac8f72d0d948568fb88fc865a0f1dad0e5fd7e62a9403f932ffa2360f106a51de237dfd932100d924dd82917c3da4dc698f071d2f4c353b3ae4495865cbbb087104bafb00158d
#私钥指数
rsa.privateExponent=00cf215cb8e96cf950ba9fe4c3587a934ded621f064ac1a41a796e574b36dc6072ba81415bb9fb784e6fad32e11e517172e2515be454410257f648479b56da3259dddadd3c71aa0a156266c25b9f78cb8d291fc218a06cfeae4f7149f73997e74e6aa0e845a559a98205ed2764283952229cac60e76b5896a6b8786c6dfa091125
########################################密码校验相关配置结束#######################

########################################http连接池配置开始#########################
http-pool.maxTotal=20
http-pool.defaultMaxPerRoute=10
http-pool.connectTimeout=5000
http-pool.connectionRequestTimeout=2000
http-pool.socketTimeout=65000
http-pool.validateAfterInactivity=2000
########################################http连接池配置结束########################

#附件
file.tempPath =D:/document/
file.uploadPath =D:/upload/
file.whiteDir=D:/document/,D:/upload/
#文书生成模板位置
documentTemplatePath=templates/
#liquibase开关
spring.liquibase.enabled=false

#swagger开关
swagger.enabled=true

#系统顶级菜单的编码
system-top-menu-code=zhjtyyxt
